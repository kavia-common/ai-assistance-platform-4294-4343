{"is_source_file": true, "format": "Python", "description": "Test module for FastAPI chat endpoint, utilizing pytest and FastAPI's TestClient to mock and verify behaviors of the chat API.", "external_files": ["app.main", "app.services.openai_service"], "external_methods": ["app.main.app", "services.openai_service.chat_completion", "app.services.openai_service.OpenAIServiceError"], "published": [], "classes": [], "methods": [{"name": "client()", "description": "Pytest fixture that provides a TestClient instance for testing the FastAPI app.", "scope": "", "scopeKind": ""}, {"name": "test_chat_success_monkeypatch(client, monkeypatch)", "description": "Tests successful chat response by monkeypatching openai_service.chat_completion.", "scope": "", "scopeKind": ""}, {"name": "test_chat_missing_api_key_returns_503(client, monkeypatch)", "description": "Tests handling of missing API key error by monkeypatching openai_service.chat_completion to raise an exception.", "scope": "", "scopeKind": ""}, {"name": "fake_chat_completion(messages)", "scope": "test_chat_success_monkeypatch", "scopeKind": "function", "description": "unavailable"}, {"name": "raise_config_error(messages)", "scope": "test_chat_missing_api_key_returns_503", "scopeKind": "function", "description": "unavailable"}], "calls": ["app.main.app", "services.openai_service.chat_completion", "app.services.openai_service.OpenAIServiceError", "monkeypatch.setattr"], "search-terms": ["pytest", "FastAPI TestClient", "chat API test", "openai_service", "monkeypatch", "Mocked assistant response", "API error handling"], "state": 2, "file_id": 23, "knowledge_revision": 59, "git_revision": "", "ctags": [{"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4343/fastapi_backend/tests/test_chat.py", "pattern": "/^def client():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "fake_chat_completion", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4343/fastapi_backend/tests/test_chat.py", "pattern": "/^    def fake_chat_completion(messages):$/", "file": true, "language": "Python", "kind": "function", "signature": "(messages)", "scope": "test_chat_success_monkeypatch", "scopeKind": "function"}, {"_type": "tag", "name": "raise_config_error", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4343/fastapi_backend/tests/test_chat.py", "pattern": "/^    def raise_config_error(messages):$/", "file": true, "language": "Python", "kind": "function", "signature": "(messages)", "scope": "test_chat_missing_api_key_returns_503", "scopeKind": "function"}, {"_type": "tag", "name": "test_chat_missing_api_key_returns_503", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4343/fastapi_backend/tests/test_chat.py", "pattern": "/^def test_chat_missing_api_key_returns_503(client, monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(client, monkeypatch)"}, {"_type": "tag", "name": "test_chat_success_monkeypatch", "path": "/home/kavia/workspace/code-generation/ai-assistance-platform-4294-4343/fastapi_backend/tests/test_chat.py", "pattern": "/^def test_chat_success_monkeypatch(client, monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(client, monkeypatch)"}], "hash": "547be1748c82b4ef7bab221602543e36", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/tests/test_chat.py", "revision_history": [{"59": ""}]}